/**
 * Product Configurator Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProductConfiguratorService);
  }
}(this, function(expect, ProductConfiguratorService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProductConfiguratorService.ProductConfiguratorApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductConfiguratorApi', function() {
    describe('productConfiguratorBulkCreateOptions', function() {
      it('should call productConfiguratorBulkCreateOptions successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorBulkCreateOptions
        //instance.productConfiguratorBulkCreateOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorBulkCreateProperties', function() {
      it('should call productConfiguratorBulkCreateProperties successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorBulkCreateProperties
        //instance.productConfiguratorBulkCreateProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorBulkCreateSteps', function() {
      it('should call productConfiguratorBulkCreateSteps successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorBulkCreateSteps
        //instance.productConfiguratorBulkCreateSteps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorBulkDeleteOptions', function() {
      it('should call productConfiguratorBulkDeleteOptions successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorBulkDeleteOptions
        //instance.productConfiguratorBulkDeleteOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorBulkDeleteSteps', function() {
      it('should call productConfiguratorBulkDeleteSteps successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorBulkDeleteSteps
        //instance.productConfiguratorBulkDeleteSteps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorBulkUpdateOptions', function() {
      it('should call productConfiguratorBulkUpdateOptions successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorBulkUpdateOptions
        //instance.productConfiguratorBulkUpdateOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorBulkUpdateProperties', function() {
      it('should call productConfiguratorBulkUpdateProperties successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorBulkUpdateProperties
        //instance.productConfiguratorBulkUpdateProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorCopyConfigurator', function() {
      it('should call productConfiguratorCopyConfigurator successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorCopyConfigurator
        //instance.productConfiguratorCopyConfigurator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorCopyOption', function() {
      it('should call productConfiguratorCopyOption successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorCopyOption
        //instance.productConfiguratorCopyOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorCopyStep', function() {
      it('should call productConfiguratorCopyStep successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorCopyStep
        //instance.productConfiguratorCopyStep(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorCreateDependency', function() {
      it('should call productConfiguratorCreateDependency successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorCreateDependency
        //instance.productConfiguratorCreateDependency(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorCreateMatrix', function() {
      it('should call productConfiguratorCreateMatrix successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorCreateMatrix
        //instance.productConfiguratorCreateMatrix(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorCreateOption', function() {
      it('should call productConfiguratorCreateOption successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorCreateOption
        //instance.productConfiguratorCreateOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorCreateProperty', function() {
      it('should call productConfiguratorCreateProperty successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorCreateProperty
        //instance.productConfiguratorCreateProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorCreateStep', function() {
      it('should call productConfiguratorCreateStep successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorCreateStep
        //instance.productConfiguratorCreateStep(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorDeleteConfigurator', function() {
      it('should call productConfiguratorDeleteConfigurator successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorDeleteConfigurator
        //instance.productConfiguratorDeleteConfigurator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorDeleteDependency', function() {
      it('should call productConfiguratorDeleteDependency successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorDeleteDependency
        //instance.productConfiguratorDeleteDependency(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorDeleteMatrix', function() {
      it('should call productConfiguratorDeleteMatrix successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorDeleteMatrix
        //instance.productConfiguratorDeleteMatrix(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorDeleteOption', function() {
      it('should call productConfiguratorDeleteOption successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorDeleteOption
        //instance.productConfiguratorDeleteOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorDeleteStep', function() {
      it('should call productConfiguratorDeleteStep successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorDeleteStep
        //instance.productConfiguratorDeleteStep(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorGetAvailableConfiguration', function() {
      it('should call productConfiguratorGetAvailableConfiguration successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorGetAvailableConfiguration
        //instance.productConfiguratorGetAvailableConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorGetAvailableConfiguration2', function() {
      it('should call productConfiguratorGetAvailableConfiguration2 successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorGetAvailableConfiguration2
        //instance.productConfiguratorGetAvailableConfiguration2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorGetConfigurationFromSelections', function() {
      it('should call productConfiguratorGetConfigurationFromSelections successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorGetConfigurationFromSelections
        //instance.productConfiguratorGetConfigurationFromSelections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorGetMatrix', function() {
      it('should call productConfiguratorGetMatrix successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorGetMatrix
        //instance.productConfiguratorGetMatrix(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorListDependencies', function() {
      it('should call productConfiguratorListDependencies successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorListDependencies
        //instance.productConfiguratorListDependencies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorListMatrices', function() {
      it('should call productConfiguratorListMatrices successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorListMatrices
        //instance.productConfiguratorListMatrices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorListOptions', function() {
      it('should call productConfiguratorListOptions successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorListOptions
        //instance.productConfiguratorListOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorListProperties', function() {
      it('should call productConfiguratorListProperties successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorListProperties
        //instance.productConfiguratorListProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorRemovePricelistFromMatrix', function() {
      it('should call productConfiguratorRemovePricelistFromMatrix successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorRemovePricelistFromMatrix
        //instance.productConfiguratorRemovePricelistFromMatrix(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorUpdateConfigurator', function() {
      it('should call productConfiguratorUpdateConfigurator successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorUpdateConfigurator
        //instance.productConfiguratorUpdateConfigurator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorUpdateDependency', function() {
      it('should call productConfiguratorUpdateDependency successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorUpdateDependency
        //instance.productConfiguratorUpdateDependency(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorUpdateMatrix', function() {
      it('should call productConfiguratorUpdateMatrix successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorUpdateMatrix
        //instance.productConfiguratorUpdateMatrix(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorUpdateOption', function() {
      it('should call productConfiguratorUpdateOption successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorUpdateOption
        //instance.productConfiguratorUpdateOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorUpdateProperty', function() {
      it('should call productConfiguratorUpdateProperty successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorUpdateProperty
        //instance.productConfiguratorUpdateProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfiguratorUpdateStep', function() {
      it('should call productConfiguratorUpdateStep successfully', function(done) {
        //uncomment below and update the code to test productConfiguratorUpdateStep
        //instance.productConfiguratorUpdateStep(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
