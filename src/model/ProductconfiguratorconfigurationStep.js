/**
 * Product Configurator Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocalisationLocalizedText from './LocalisationLocalizedText';
import ProductconfiguratorconfigurationOption from './ProductconfiguratorconfigurationOption';

/**
 * The ProductconfiguratorconfigurationStep model module.
 * @module model/ProductconfiguratorconfigurationStep
 * @version v1
 */
class ProductconfiguratorconfigurationStep {
    /**
     * Constructs a new <code>ProductconfiguratorconfigurationStep</code>.
     * @alias module:model/ProductconfiguratorconfigurationStep
     */
    constructor() { 
        
        ProductconfiguratorconfigurationStep.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductconfiguratorconfigurationStep</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductconfiguratorconfigurationStep} obj Optional instance to populate.
     * @return {module:model/ProductconfiguratorconfigurationStep} The populated <code>ProductconfiguratorconfigurationStep</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductconfiguratorconfigurationStep();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('grn')) {
                obj['grn'] = ApiClient.convertToType(data['grn'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = LocalisationLocalizedText.constructFromObject(data['label']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = LocalisationLocalizedText.constructFromObject(data['description']);
            }
            if (data.hasOwnProperty('subjectToStepId')) {
                obj['subjectToStepId'] = ApiClient.convertToType(data['subjectToStepId'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
            if (data.hasOwnProperty('isRequired')) {
                obj['isRequired'] = ApiClient.convertToType(data['isRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], [ProductconfiguratorconfigurationOption]);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('hasMultipleSelection')) {
                obj['hasMultipleSelection'] = ApiClient.convertToType(data['hasMultipleSelection'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductconfiguratorconfigurationStep</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductconfiguratorconfigurationStep</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['grn'] && !(typeof data['grn'] === 'string' || data['grn'] instanceof String)) {
            throw new Error("Expected the field `grn` to be a primitive type in the JSON string but got " + data['grn']);
        }
        // validate the optional field `label`
        if (data['label']) { // data not null
          LocalisationLocalizedText.validateJSON(data['label']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          LocalisationLocalizedText.validateJSON(data['description']);
        }
        // ensure the json data is a string
        if (data['subjectToStepId'] && !(typeof data['subjectToStepId'] === 'string' || data['subjectToStepId'] instanceof String)) {
            throw new Error("Expected the field `subjectToStepId` to be a primitive type in the JSON string but got " + data['subjectToStepId']);
        }
        // ensure the json data is a string
        if (data['position'] && !(typeof data['position'] === 'string' || data['position'] instanceof String)) {
            throw new Error("Expected the field `position` to be a primitive type in the JSON string but got " + data['position']);
        }
        if (data['options']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['options'])) {
                throw new Error("Expected the field `options` to be an array in the JSON data but got " + data['options']);
            }
            // validate the optional field `options` (array)
            for (const item of data['options']) {
                ProductconfiguratorconfigurationOption.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} id
 */
ProductconfiguratorconfigurationStep.prototype['id'] = undefined;

/**
 * @member {String} grn
 */
ProductconfiguratorconfigurationStep.prototype['grn'] = undefined;

/**
 * @member {module:model/LocalisationLocalizedText} label
 */
ProductconfiguratorconfigurationStep.prototype['label'] = undefined;

/**
 * @member {module:model/LocalisationLocalizedText} description
 */
ProductconfiguratorconfigurationStep.prototype['description'] = undefined;

/**
 * @member {String} subjectToStepId
 */
ProductconfiguratorconfigurationStep.prototype['subjectToStepId'] = undefined;

/**
 * @member {String} position
 */
ProductconfiguratorconfigurationStep.prototype['position'] = undefined;

/**
 * @member {Boolean} isRequired
 */
ProductconfiguratorconfigurationStep.prototype['isRequired'] = undefined;

/**
 * @member {Array.<module:model/ProductconfiguratorconfigurationOption>} options
 */
ProductconfiguratorconfigurationStep.prototype['options'] = undefined;

/**
 * @member {Boolean} enabled
 */
ProductconfiguratorconfigurationStep.prototype['enabled'] = undefined;

/**
 * @member {Boolean} hasMultipleSelection
 */
ProductconfiguratorconfigurationStep.prototype['hasMultipleSelection'] = undefined;






export default ProductconfiguratorconfigurationStep;

